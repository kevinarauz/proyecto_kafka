input {
  kafka {
    bootstrap_servers => "kafka:9092"
    topics => ["Events", "salesforce.customer", "salesforce.orders"]
    group_id => "elasticsearch-group"
    consumer_threads => 1
    codec => "json"
  }
}

filter {
  # Agregar timestamp si no existe
  if ![timestamp] {
    mutate {
      add_field => { "timestamp" => "%{@timestamp}" }
    }
  }

  # Agregar información del topic origen
  mutate {
    add_field => { "kafka_topic" => "%{[@metadata][kafka][topic]}" }
    add_field => { "kafka_partition" => "%{[@metadata][kafka][partition]}" }
    add_field => { "kafka_offset" => "%{[@metadata][kafka][offset]}" }
  }

  # Parsear eventos de Salesforce específicos
  if [kafka_topic] == "salesforce.customer" {
    mutate {
      add_field => { "event_type" => "customer" }
      add_field => { "source_system" => "salesforce" }
    }
  }

  if [kafka_topic] == "salesforce.orders" {
    mutate {
      add_field => { "event_type" => "order" }
      add_field => { "source_system" => "salesforce" }
    }
  }

  if [kafka_topic] == "Events" {
    mutate {
      add_field => { "event_type" => "general" }
      add_field => { "source_system" => "salesforce" }
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "transforma-ecuador-%{event_type}-%{+YYYY.MM.dd}"
    document_type => "_doc"
  }

  # Debug: también enviar a stdout
  stdout {
    codec => rubydebug
  }
}